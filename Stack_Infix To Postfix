class Solution {
    // Function to convert an infix expression to a postfix expression.
    public static int prec(char ch){
        switch(ch){
            case '+':
            case '-':
                return 1;
            
            case '*':
            case '/':
                return 2;
            
            case '^':
                return 3;
        }
        
        return -1;
    }
    public static String infixToPostfix(String exp) {
        // Your code here
        String result = new String("");
        Stack<Character> st = new Stack<>();
        for(int i=0; i<exp.length(); i++){
            char ch = exp.charAt(i);
            
            if(Character.isLetterOrDigit(ch))
            result += ch;
            
            else if(ch == '(')
            st.push(ch);
            
            else if(ch == ')'){
                while(!st.isEmpty() && st.peek()!='('){
                    result += st.peek();
                    st.pop();
                }
                st.pop();
            }
            
            else{
                while(!st.isEmpty() && prec(ch)<=prec(st.peek())){
                    result+= st.pop();
                }
                
                st.push(ch);
            }
        }
        
        while(!st.isEmpty()){
            if(st.peek()=='(')
            return "-1";
            
            else
            result+= st.pop();
        }
        
        return result;
    }
}
